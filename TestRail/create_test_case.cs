///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TestRail
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The create_test_case recording.
    /// </summary>
    [TestModule("32eef574-f23d-4da6-b748-196536fc32f2", ModuleType.Recording, 1)]
    public partial class Create_test_case : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TestRailRepository repository.
        /// </summary>
        public static TestRailRepository repo = TestRailRepository.Instance;

        static Create_test_case instance = new Create_test_case();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Create_test_case()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Create_test_case Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.TestRail' at 48;9.", repo.LoginTestRail.TestRailInfo, new RecordItemIndex(0));
            repo.LoginTestRail.TestRail.Click("48;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.TestCases' at 56;16.", repo.LoginTestRail.TestCasesInfo, new RecordItemIndex(1));
            repo.LoginTestRail.TestCases.Click("56;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.AddCase' at 22;3.", repo.LoginTestRail.AddCaseInfo, new RecordItemIndex(2));
            repo.LoginTestRail.AddCase.Click("22;3");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.Title' at 79;15.", repo.LoginTestRail.TitleInfo, new RecordItemIndex(3));
            repo.LoginTestRail.Title.Click("79;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'ranorex{Space}testcase' with focus on 'LoginTestRail.Title'.", repo.LoginTestRail.TitleInfo, new RecordItemIndex(4));
            repo.LoginTestRail.Title.PressKeys("ranorex{Space}testcase");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.CustomPreconds' at 106;20.", repo.LoginTestRail.CustomPrecondsInfo, new RecordItemIndex(5));
            repo.LoginTestRail.CustomPreconds.Click("106;20");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.CustomPreconds' at 24;16.", repo.LoginTestRail.CustomPrecondsInfo, new RecordItemIndex(6));
            repo.LoginTestRail.CustomPreconds.Click("24;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'preconditions{Tab}steps{Tab}{Tab}' with focus on 'LoginTestRail.CustomPreconds'.", repo.LoginTestRail.CustomPrecondsInfo, new RecordItemIndex(7));
            repo.LoginTestRail.CustomPreconds.PressKeys("preconditions{Tab}steps{Tab}{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(8));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.CustomExpected' at 10;45.", repo.LoginTestRail.CustomExpectedInfo, new RecordItemIndex(9));
            repo.LoginTestRail.CustomExpected.Click("10;45");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'expected{Space}result' with focus on 'LoginTestRail.CustomExpected'.", repo.LoginTestRail.CustomExpectedInfo, new RecordItemIndex(10));
            repo.LoginTestRail.CustomExpected.PressKeys("expected{Space}result");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.Accept' at 64;16.", repo.LoginTestRail.AcceptInfo, new RecordItemIndex(11));
            repo.LoginTestRail.Accept.Click("64;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Successfully added the new test case. ') on item 'LoginTestRail.SuccessfullyAddedTheNewTestCase'.", repo.LoginTestRail.SuccessfullyAddedTheNewTestCaseInfo, new RecordItemIndex(12));
            Validate.Attribute(repo.LoginTestRail.SuccessfullyAddedTheNewTestCaseInfo, "InnerText", "Successfully added the new test case. ");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginTestRail.ATagReturnToDashboard' at 104;3.", repo.LoginTestRail.ATagReturnToDashboardInfo, new RecordItemIndex(13));
            repo.LoginTestRail.ATagReturnToDashboard.Click("104;3");
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAll Projects\t\t\t\t\t') on item 'LoginTestRail.DivTagAllPr'.", repo.LoginTestRail.DivTagAllPrInfo, new RecordItemIndex(14));
                Validate.Attribute(repo.LoginTestRail.DivTagAllPrInfo, "InnerText", "\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAll Projects\t\t\t\t\t", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
